#!/bin/sh
#

COVERAGE_THRESHOLD = 60

evalute_module_csv() {
	INPUT=$1

	[ ! -f $INPUT ] && { echo "$INPUT file not found"; exit 1; }

	i=1
	while IFS=, read group package class instruction_missed instruction_covered branch_missed branch_covered line_missed line_covered complexity_missed complexity_covered method_missed method_covered
	do
		test $i -eq 1 && ((i=i+1)) && continue

		if [[ $line_covered -eq 0 ]]
		then
		    echo "There is no test run for $class in $package"
		else
			line_total=$(($line_covered + $line_missed))
			cov_perc=$(($line_covered*100/$line_total))
			echo "$line_covered out of $line_total lines (coverage: $cov_perc) are tested at $class in $package"

			test $cov_perc -lt $COVERAGE_THRESHOLD && ((cov_warning= "$cov_warning $class"))
		fi
	done < $INPUT
}

rm -rf ./app/build/covReportDir
rm -rf ./second/build/covReportDir

unit_tests_to_run=""
android_tests_to_run=""

while IFS= read -r line; do

  filename="${line##*/}"                      # Strip longest match of */ from start
  dir="${line:0:${#line} - ${#filename}}" # Substring from 0 thru pos of filename
  base="${filename%.[^.]*}"                       # Strip shortest match of . plus at least one non-dot char from end

  if [[ $line == *.kt ]] || [[ $line == *.java ]]  ;then
  	if [[ $line == */src/test/*Test.* ]]  ;then
	  unit_tests_to_run ="$unit_tests_to_run $base" 
	elif [[ $line == */src/androidTest/*UITest.* ]]  ;then			
	  android_tests_to_run ="$android_tests_to_run $base"
	else
	  if [[ -f "${{line/main/test}/./Test.}" ]] ;then
	  	unit_tests_to_run ="$unit_tests_to_run ${base}Test"
	  else
	  	if git diff-index --cached --name-only --diff-filter=A HEAD | grep -Fxq $line ;  then
	  		echo "Test file for  $base should be prepared"
	  		exit 1
	  	fi
	  fi  
	  [ -f "${{line/main/androidTest}/./UITest.}" ]] && { android_tests_to_run ="$android_tests_to_run ${base}Test" }  
	fi
  fi
  
done < <(git diff-index --cached --name-only --diff-filter=MA HEAD )

if ./gradlew debugSLKCoverage  ;then
	echo ""
else
	echo ""
	echo "tests not passed. You are not allowed to push this branch"
	exit 1
fi

cov_warning=""
evalute_module_csv ./app/build/covReportDir/debugSLKCoverage/debugSLKCoverage.csv
evalute_module_csv ./second/build/covReportDir/debugSLKCoverage/debugSLKCoverage.csv
echo ""

if [[ ! $cov_warning -eq "" ]]
then
	echo -e "\e[31mPlease improve below tests with coverage less than $COVERAGE_THRESHOLD\e[0m"
	echo -e "\e[31m$cov_warning\e[0m"
	echo -e "\e[0m "
	exit 1
fi
echo ""



